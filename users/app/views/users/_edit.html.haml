-#
-# edit user form, used by both show and edit actions.
-#

-#
-# CHANGE PASSWORD
-#
-# * everything about this form is handled with javascript. So take care when changing any ids.
-# * the login is required when changing the password because it is used as part of the salt when calculating the password verifier.
-#   however, we don't want the user to change their login without generating a new key, so we hide the ui for this
-#   (although it works perfectly fine to change username if the field was visible).
-#
- form_options = {:url => '/not-used', :html => {:class => user_form_class('form-horizontal'), :id =>  'update_login_and_password'}, :validate => true}
= simple_form_for @user, form_options do |f|
  %legend= t(:change_password)
  = hidden_field_tag 'user_param', @user.to_param
  .hidden
    = f.input :login, :label => t(:username), :required => false, :input_html => {:id => :srp_username}
  = f.input :password, :required => false, :validate => true, :input_html => { :id => :srp_password }
  = f.input :password_confirmation, :required => false, :input_html => { :id => :srp_password_confirmation }
  .control-group
    .controls
      = f.submit t(:save), :class => 'btn btn-primary'

-#
-# CHANGE PGP KEY
-#
-# this will be replaced by a identities controller/view at some point
-#

- form_options = {:html => {:class => user_form_class('form-horizontal'), :id => 'update_pgp_key'}, :validate => true}
= simple_form_for [:api, @user], form_options do |f|
  %legend= t(:advanced_options)
  = f.input :public_key, :as => :text, :hint => t(:use_ascii_key), :input_html => {:class => "full-width", :rows => 4}
  .control-group
    .controls
      = f.submit t(:save), :class => 'btn'

-#
-# DESTROY ACCOUNT
-#

%legend
  - if @user == current_user
    = t(:destroy_my_account)
  - else
    = t(:admin_destroy_account, :username => @user.login)
%p= t(:destroy_account_info)
= link_to user_path(@user), :method => :delete, :confirm => t(:are_you_sure), :class => "btn btn-danger" do
  %i.icon-remove.icon-white
  = t(:destroy_my_account)
- if @user != current_user and @user.enabled?
  %legend
    = t(:deactivate_account, :username => @user.login)
  %p= t(:deactivate_description)
  = link_to deactivate_user_path(@user), :method => :post, :class => "btn btn-warning"  do
    %i.icon-pause.icon-white
    = t(:deactivate)
- elsif @user != current_user and !@user.enabled?
  %legend
    = t(:enable_account, :username => @user.login)
  %p= t(:enable_description)
  = link_to enable_user_path(@user), :method => :post, :class => "btn btn-warning"  do
    %i.icon-ok.icon-white
      = t(:enable)
